Index: src/apps/mplayerc/MainFrm.cpp
===================================================================
--- src/apps/mplayerc/MainFrm.cpp	(ç‰ˆæœ¬ 5008)
+++ src/apps/mplayerc/MainFrm.cpp	(å·¥ä½œå‰¯æœ¬)
@@ -908,6 +908,9 @@
 	m_ExtSubFilesTime.clear();
 	m_ExtSubPaths.clear();
 
+	HINSTANCE lng = AfxGetResourceHandle();
+	FreeLibrary(lng);
+
 	__super::OnDestroy();
 }
 
@@ -7558,7 +7561,7 @@
 			}
 
 			CString info;
-			info.Format(L"Rotation: %d°", rotation);
+			info.Format(L"Rotation: %d", rotation);
 			SendStatusMessage(info, 3000);
 		}
 	}
Index: src/apps/mplayerc/mpc-be.vcxproj
===================================================================
--- src/apps/mplayerc/mpc-be.vcxproj	(ç‰ˆæœ¬ 5008)
+++ src/apps/mplayerc/mpc-be.vcxproj	(å·¥ä½œå‰¯æœ¬)
@@ -23,11 +23,12 @@
     <ProjectGuid>{8CE7E5D0-C821-47AC-A247-28EC95B34670}</ProjectGuid>
     <RootNamespace>mpc-be</RootNamespace>
     <Keyword>MFCProj</Keyword>
+    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
   <Import Project="..\..\platform.props" />
   <PropertyGroup Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
     <UseOfMfc>Static</UseOfMfc>
     <CharacterSet>Unicode</CharacterSet>
   </PropertyGroup>
Index: src/apps/mplayerc/mplayerc.cpp
===================================================================
--- src/apps/mplayerc/mplayerc.cpp	(ç‰ˆæœ¬ 5008)
+++ src/apps/mplayerc/mplayerc.cpp	(å·¥ä½œå‰¯æœ¬)
@@ -770,8 +770,33 @@
 	return fRet;
 }
 
+BOOL g_bInit=FALSE;
+
+enum enum TVCDllType {vtDialog, vtMFC};
+
+extern "C" __declspec(dllexport) void db_ShowDllForm_Plugins(TVCDllType* spFileType, char** strParentName, char** strSubModuleName, char** strIconFileName, char** strClassName, char** strWindowName, const bool show = false)
+{
+	*spFileType       = vtMFC;         // TVCDllType
+	*strParentName    = "¶àÃ½Ìå";      // ¸¸Ä£¿éÃû³Æ
+	*strSubModuleName = "MPC-BE(DLL)"; // ×ÓÄ£¿éÃû³Æ
+	*strClassName     = "MPC-BE";      // ´°ÌåÀàÃû
+	*strWindowName    = "MPC-BE";      // ´°ÌåÃû
+	*strIconFileName  = "";
+
+	if (show)
+	{
+		g_bInit = TRUE;
+		theApp.InitInstance();
+	}
+}
+
+
 BOOL CMPlayerCApp::InitInstance()
 {
+	if(!g_bInit)
+	  return TRUE;
+
 #ifdef DEBUG
 	DbgSetModuleLevel(LOG_TRACE, DWORD_MAX);
 	DbgSetModuleLevel(LOG_ERROR, DWORD_MAX);
@@ -1061,7 +1086,7 @@
 		return FALSE;
 	}
 	pFrame->RestoreControlBars();
-	pFrame->SetDefaultWindowRect((m_s.nCLSwitches & CLSW_MONITOR) ? m_s.iMonitor : 0);
+	//pFrame->SetDefaultWindowRect((m_s.nCLSwitches & CLSW_MONITOR) ? m_s.iMonitor : 0);
 	pFrame->SetDefaultFullscreenState();
 	pFrame->SetIcon(AfxGetApp()->LoadIconW(IDR_MAINFRAME), TRUE);
 	pFrame->DragAcceptFiles();
@@ -1512,7 +1537,9 @@
 
 CString CMPlayerCApp::GetSatelliteDll(int nLanguage)
 {
-	CString path = GetProgramDir();
+	//CString path = GetProgramDir();
+	CString path = GetModulePath(_AtlBaseModule.GetModuleInstance());
+	path.Truncate(path.ReverseFind('\\') + 1);
 
 	if (nLanguage < 0 || nLanguage >= languageResourcesCount || languageResources[nLanguage].resourceID == ID_LANGUAGE_ENGLISH) {
 		path.Empty();
Index: src/apps/mplayerc/PngImage.cpp
===================================================================
--- src/apps/mplayerc/PngImage.cpp	(ç‰ˆæœ¬ 5008)
+++ src/apps/mplayerc/PngImage.cpp	(å·¥ä½œå‰¯æœ¬)
@@ -227,8 +227,9 @@
 		if (fp) {
 			png_init_io(png_ptr, fp);
 		} else {
-			HRSRC hRes = FindResourceW(nullptr, MAKEINTRESOURCEW(resid), L"PNG");
-			HANDLE lRes = LoadResource(nullptr, hRes);
+			HINSTANCE hInst = AfxGetInstanceHandle();// AfxGetResourceHandle();
+			HRSRC hRes = FindResourceW(hInst, MAKEINTRESOURCEW(resid), L"PNG");
+			HANDLE lRes = LoadResource(hInst, hRes);
 
 			struct png_t png;
 			png.data = (unsigned char*)LockResource(lRes);
Index: src/DSUtil/Profile.cpp
===================================================================
--- src/DSUtil/Profile.cpp	(ç‰ˆæœ¬ 5008)
+++ src/DSUtil/Profile.cpp	(å·¥ä½œå‰¯æœ¬)
@@ -29,7 +29,7 @@
 
 CProfile::CProfile()
 {
-	m_IniPath = GetModulePath(nullptr);
+	m_IniPath = GetModulePath(_AtlBaseModule.GetModuleInstance());
 	::PathRenameExtensionW(m_IniPath.GetBuffer(MAX_PATH), L".ini");
 	m_IniPath.ReleaseBuffer();
 
